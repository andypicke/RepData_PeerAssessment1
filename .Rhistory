#        print(b)
n_iter<-n_iter+1
}
print(n_iter)
nit[i]<-n_iter
}
median(nit)
hist(nit)
sessionInfo()
install.packages(c("BH", "DBI", "fields", "Hmisc", "jsonlite", "Matrix", "nlme", "nycflights13", "openssl", "rgdal", "rgeos", "survival", "testthat", "zoo"))
rm(list=ls())
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
?data
head(spam)
str(spam)
library(kernlab)
data(spam)
head(spam)
str(spam)
set.seed(3435)
trainIndicator <- rbinom(4601,size=1,prob=0.5)
table(trainIndicator)
dim(spam)
trainSpam <- spam[trainIndicator==1 , ]
testSpam <- spam[trainIndicator==0 , ]
names(trainSpam)
head(trainSpam)
table(trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(trainSpam$capitalAve)
boxplot(trainSpam$capitalAve)
boxplot(trainSpam$capitalAve ~ trainSpam$type)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam$capitalAve)+1 ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) ~ trainSpam$type)
plot(log10(trainSpam$capitalAve) +1 ~ trainSpam$type)
plot(log10(trainSpam$capitalAve +1) ~ trainSpam$type)
log10(0)
plot(log10(trainSpam[.1:4]+1))
hCluster <- hclust(dist(t(trainSpam[,1:57])))
plot(hCluster)
hCluster <- hclust(dist(t(log10(trainSpam[,1:57]+1))))
plot(hCluster)
source('~/DataSciCoursera/ReproducibleResearch/Week1.R', echo=TRUE)
trainSpam$numType <- as.numeric(trainSpam$type)-1
trainSpam$numType
sessionInfo()
wea
url<-"https://www.wunderground.com/history/airport/KDEN/2015/1/1/CustomHistory.html?dayend=31&monthend=12&yearend=2015&req_city=&req_state=&req_statename=&reqdb.zip=&reqdb.magic=&reqdb.wmo=&format=1"
download.file(url,"DenWeather2015.csv")
wea<-read.csv("DenWeather2015.csv")
wea$MST <- as.Date(wea$MST,"%Y-%m-%d")
wea$month <- months(wea$MST)
wea
names(wea)
maxtemp_mean_month <- vector(mode='numeric',length=12)
mintemp_mean_month <- vector(mode='numeric',length=12)
precip_mean_month <- vector(mode='numeric',length=12)
for (i in seq_along(month_list)){
a<-which(wea$month==month_list[i])
maxtemp_mean_month[i] <- mean(wea$Max.TemperatureF[a])
mintemp_mean_month[i] <- mean(wea$Min.TemperatureF[a],na.rm = TRUE)
precip_mean_month[i] <- mean(wea$PrecipitationIn[a],na.rm = TRUE)
}
month_list <- c("January","February","March","April","May","June","July","August","September","October","November","December")
wea<-read.csv("DenWeather2015.csv")
wea$MST <- as.Date(wea$MST,"%Y-%m-%d")
wea$month <- months(wea$MST)
# compute mean temps per month
maxtemp_mean_month <- vector(mode='numeric',length=12)
mintemp_mean_month <- vector(mode='numeric',length=12)
precip_mean_month <- vector(mode='numeric',length=12)
for (i in seq_along(month_list)){
a<-which(wea$month==month_list[i])
maxtemp_mean_month[i] <- mean(wea$Max.TemperatureF[a])
mintemp_mean_month[i] <- mean(wea$Min.TemperatureF[a],na.rm = TRUE)
precip_mean_month[i] <- mean(wea$PrecipitationIn[a],na.rm = TRUE)
}
warnings()
class(wea$PrecipitationIn)
wea$PrecipitationIn
head(wea)
View(wea)
wea$PrecipitationIn=as.numeric(wea$PrecipitationIn)
wea<-read.csv("DenWeather2015.csv")
View(wea)
idT<-which(wea$PrecipitationIn=="T")
wea$PrecipitationIn[idT]<-0
View(wea)
wea<-read.csv("DenWeather2015.csv")
wea$MST <- as.Date(wea$MST,"%Y-%m-%d")
wea$month <- months(wea$MST)
idT<-which(wea$PrecipitationIn=="T")
wea$PrecipitationIn[idT]<-0.00
levels(wea$PrecipitationIn)
wea<-read.csv("DenWeather2015.csv")
wea$MST <- as.Date(wea$MST,"%Y-%m-%d")
wea$month <- months(wea$MST)
# in Precip "T" is trace I think;
idT<-which(wea$PrecipitationIn=="T")
wea$PrecipitationIn[idT]<-"0.00"
View(wea)
wea$PrecipitationIn <- as.numeric(wea$PrecipitationIn)
View(wea)
wea<-read.csv("DenWeather2015.csv")
wea$MST <- as.Date(wea$MST,"%Y-%m-%d")
wea$month <- months(wea$MST)
idT<-which(wea$PrecipitationIn=="T")
wea$PrecipitationIn[idT]<-"0.00"
class(wea$PrecipitationIn)
as.numeric(wea$PrecipitationIn)
wea<-read.csv("DenWeather2015.csv")
wea$MST <- as.Date(wea$MST,"%Y-%m-%d")
wea$month <- months(wea$MST)
as.character(wea$PrecipitationIn)
a<-as.character(wea$PrecipitationIn)
as.numeric(a)
wea<-read.csv("DenWeather2015.csv")
wea$MST <- as.Date(wea$MST,"%Y-%m-%d")
wea$month <- months(wea$MST)
# in Precip "T" is trace I think; change to zero for analysis
idT<-which(wea$PrecipitationIn=="T")
wea$PrecipitationIn[idT]<-"0.00"
wea$PrecipitationIn <- as.numeric(as.character(wea$PrecipitationIn))
class(wea$PrecipitationIn)
maxtemp_mean_month <- vector(mode='numeric',length=12)
mintemp_mean_month <- vector(mode='numeric',length=12)
precip_mean_month <- vector(mode='numeric',length=12)
for (i in seq_along(month_list)){
a<-which(wea$month==month_list[i])
maxtemp_mean_month[i] <- mean(wea$Max.TemperatureF[a])
mintemp_mean_month[i] <- mean(wea$Min.TemperatureF[a],na.rm = TRUE)
precip_mean_month[i] <- mean(wea$PrecipitationIn[a],na.rm = TRUE)
}
W_mon=data.frame(precip=precip_mean_month,maxtemp=maxtemp_mean_month)
View(W_mon)
summary(W_mon)
str(W_mon)
W_mon=data.frame(precip=precip_mean_month,maxtemp=maxtemp_mean_month,mintemp_mean_month,monthID=1:12,month=month_list)
View(W_mon)
qplot(W$maxtemp,tot_rides_month,geom=c("point","line"))
library(ggplot2)
qplot(W$maxtemp,tot_rides_month,geom=c("point","line"))
qplot(W_mon$maxtemp,tot_rides_month,geom=c("point","line"))
View(wea)
class(wea$Max.Wind.SpeedMPH)
maxwind_mean_month <- vector(mode='numeric',length=12)
for (i in seq_along(month_list)){
a<-which(wea$month==month_list[i])
maxtemp_mean_month[i] <- mean(wea$Max.TemperatureF[a])
mintemp_mean_month[i] <- mean(wea$Min.TemperatureF[a],na.rm = TRUE)
precip_mean_month[i] <- mean(wea$PrecipitationIn[a],na.rm = TRUE)
maxwind_mean_month[i] <- mean(wea$Max.Wind.SpeedMPH[a],na.rm = TRUE)
# Make a data frame w/ monthly values
W_mon=data.frame(precip=precip_mean_month,maxtemp=maxtemp_mean_month,mintemp_mean_month,maxwind=maxwind_mean_month,monthID=1:12,month=month_list)
W_mon
W_mon=data.frame(precip=precip_mean_month,maxtemp=maxtemp_mean_month,mintemp_mean_month,maxwind=maxwind_mean_month,monthID=1:12,month=month_list)
W_mon
View(wea)
mean(wea$Max.Wind.SpeedMPH)
# compute mean weather values per month
maxtemp_mean_month <- vector(mode='numeric',length=12)
mintemp_mean_month <- vector(mode='numeric',length=12)
precip_mean_month <- vector(mode='numeric',length=12)
maxwind_mean_month <- vector(mode='numeric',length=12)
for (i in seq_along(month_list)){
a<-which(wea$month==month_list[i])
maxtemp_mean_month[i] <- mean(wea$Max.TemperatureF[a])
mintemp_mean_month[i] <- mean(wea$Min.TemperatureF[a],na.rm = TRUE)
precip_mean_month[i] <- mean(wea$PrecipitationIn[a],na.rm = TRUE)
maxwind_mean_month[i] <- mean(wea$Max.Wind.SpeedMPH[a],na.rm = TRUE)
}
# Make a data frame w/ monthly values
W_mon=data.frame(precip=precip_mean_month,maxtemp=maxtemp_mean_month,mintemp_mean_month,maxwind=maxwind_mean_month,monthID=1:12,month=month_list)
View(W_mon)
W_mon=data.frame(precip=precip_mean_month,maxtemp=maxtemp_mean_month,mintemp=mintemp_mean_month,maxwind=maxwind_mean_month,monthID=1:12,month=month_list)
plot(yday(wea$MST),wea$Max.TemperatureF)
rm(list=ls())
setwd("/Users/Andy/DataSciCoursera/ReproducibleResearch/CourseProject1/")
dat <- read.csv("activity.csv")
class(dat$date)
dat$date <- as.Date(dat$date)
class(dat$date)
steps_per_day <- tapply(dat$steps,dat$date,sum)
hist(steps_per_day)
mean_steps_day <- mean(steps_per_day,na.rm = TRUE)
med_steps_day <- median(steps_per_day,na.rm = TRUE)
mean_steps_interval <- tapply(dat$steps, dat$interval, mean,na.rm=TRUE)
plot(unique(dat$interval),mean_steps_interval,type="l",ylab="Avg # steps taken",xlab="Interval")
unique(dat$interval)[which.max(mean_steps_interval)]
N_na <- length(which(is.na(dat$steps)))
pct_na <- N_na / length(dat$steps) *100
idna <-which(is.na(dat$steps))
dat$steps_fill<-dat$steps
#lapply( dat$steps[which(is.na(dat$steps))],mean())
for (i in seq_along(idna)){
dat$steps_fill[idna[i]] <- mean_steps_interval[which(dat$interval[idna[i]]==unique(dat$interval))]
steps_per_day_fill <- tapply(dat$steps_fill,dat$date,sum)
hist(steps_per_day_fill)
mean_steps_day_fill <- mean(steps_per_day_fill)
med_steps_day_fill <- median(steps_per_day_fill)
dat
View(dat)
setwd("/Users/Andy/DataSciCoursera/ReproducibleResearch/CourseProject1/")
dat <- read.csv("activity.csv")
ff<-factor(levels=c("weekday","weekend"))
ff
days(dat$date)
day(dat$date)
?day
?days
?weekdays
weekdays(dat$date)
setwd("/Users/Andy/DataSciCoursera/ReproducibleResearch/CourseProject1/")
dat <- read.csv("activity.csv")
class(dat$date)
dat$date <- as.Date(dat$date)
class(dat$date)
weekdays(dat$date)
weekday_list <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekend_list <- c("Saturday","Sunday")
id_week <- which(weekdays(dat$date) %in% weekday_list)
id_week
id_weekend <- which(weekdays(dat$date) %in% weekend_list)
weekdays(dat$date[id_week])
weekdays(dat$date[id_weekend])
dat$Group[id_weekend] <-ff[2]
dat$Group[id_weekend] <-factor("weekend")
View(dat)
?factor
dat$Group[id_week] <-"week"
dat$Group[id_weekend] <-"weekend"
dat$Group <- as.factor(dat$Group)
class(dat$Group)
library(ggplot2)
aa<-tapply(dat$steps,dat$Group,mean)
aa
aa<-tapply(dat$steps,dat$Group,mean,na.rm=TRUE)
aa
library(lattice)
xyplot(dat$interval,dat$steps)
xyplot(dat$interval)
xyplot(dat$interval,dat)
?xyplot
xyplot(dat$interval ~ dat$steps,dat)
xyplot(dat$steps ~ dat$interval,dat)
xyplot(dat$steps ~ dat$interval,dat,type="l")
xyplot(dat$steps ~ dat$interval,dat,type="l",panel=Group)
xyplot(dat$steps ~ dat$interval,dat,type="l",panel=dat$Group)
rm(list=ls())
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind,data=airquality)
xyplot(Ozone~Wind,data=airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind,data=airquality,pch=8,col="red",main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month),data=airquality,layout=c(5,1))
xyplot(Ozone~Wind | Month,data=airquality,layout=c(5,1))
p<-xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R",local=TRUE)
exit
0
info()
skip()
skip()
skip()
info()
main()
setwd("/Users/Andy/DataSciCoursera/ReproducibleResearch/CourseProject1/")
dat <- read.csv("activity.csv")
class(dat$date)
dat$date <- as.Date(dat$date)
class(dat$date)
steps_per_day <- tapply(dat$steps,dat$date,sum)
hist(steps_per_day)
mean_steps_interval <- tapply(dat$steps, dat$interval, mean,na.rm=TRUE)
plot(unique(dat$interval),mean_steps_interval,type="l",ylab="Avg # steps taken",xlab="Interval")
N_na <- length(which(is.na(dat$steps)))
pct_na <- N_na / length(dat$steps) *100
idna <-which(is.na(dat$steps))
dat$steps_fill<-dat$steps
#lapply( dat$steps[which(is.na(dat$steps))],mean())
for (i in seq_along(idna)){
dat$steps_fill[idna[i]] <- mean_steps_interval[which(dat$interval[idna[i]]==unique(dat$interval
steps_per_day_fill <- tapply(dat$steps_fill,dat$date,sum)
hist(steps_per_day_fill)
steps_per_day_fill <- tapply(dat$steps_fill,dat$date,sum)
hist(steps_per_day_fill)
weekday_list <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekend_list <- c("Saturday","Sunday")
id_week <- which(weekdays(dat$date) %in% weekday_list)
id_weekend <- which(weekdays(dat$date) %in% weekend_list)
weekday_list <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekend_list <- c("Saturday","Sunday")
id_week <- which(weekdays(dat$date) %in% weekday_list)
id_weekend <- which(weekdays(dat$date) %in% weekend_list)
dat$Group[id_week] <-"week"
dat$Group[id_weekend] <-"weekend"
dat$Group <- as.factor(dat$Group)
library(lattice)
xyplot(dat$steps~dat$interval,data=dat)
xyplot(dat$steps~dat$interval | dat$Group,data=dat)
xyplot(dat$steps~dat$interval | dat$Group,data=dat,layout=c(2,1))
xyplot(dat$steps~dat$interval | dat$Group,data=dat,layout=c(1,2))
")
xyplot(dat$steps~dat$interval | dat$Group,data=dat,layout=c(1,2),lty="l")
xyplot(dat$steps~dat$interval | dat$Group,data=dat,layout=c(1,2),lty="l")
xyplot(dat$steps~dat$interval | dat$Group,data=dat,layout=c(1,2),type="l")
steps_per_day <- tapply(dat$steps,dat$date,sum)
steps_per_day
dat$mean_steps_interval <- tapply(dat$steps, dat$interval, mean,na.rm=TRUE)
dim(mean_steps_interval)
dim(dat)
dat$mean_steps_interval <- tapply(dat$steps, dat$interval, mean,na.rm=TRUE)
View(dat)
mean_steps_interval <- tapply(dat$steps, dat$interval, mean,na.rm=TRUE)
plot(unique(dat$interval),mean_steps_interval,type="l",ylab="Avg # steps taken",xlab="Interval")
xyplot(unique(dat$interval),mean_steps_interval)
library(lattice)
xyplot(unique(dat$interval),mean_steps_interval)
class(unique(dat$interval))
class(mean_steps_interval)
mean_steps_interval
dim(mean_steps_interval)
as.numeric(mean_steps_interval)
mean_steps_interval
mean_steps_interval <- as.numeric(tapply(dat$steps, dat$interval, mean,na.rm=TRUE))
plot(unique(dat$interval),mean_steps_interval,type="l",ylab="Avg # steps taken",xlab="Interval")
xyplot(unique(dat$interval),mean_steps_interval)
plot(as.numeric(unique(dat$interval)),mean_steps_interval,type="l",ylab="Avg # steps taken",xlab="Interval")
plot(as.numeric(unique(dat$interval)),mean_steps_interval,type="l",ylab="Avg # steps taken",xlab="Interval")
xyplot(unique(dat$interval),mean_steps_interval)
xyplot(as.numeric(unique(dat$interval)),mean_steps_interval)
class(as.numeric(unique(dat$interval)))
xyplot(unique(dat$interval),mean_steps_interval)
plot(as.numeric(unique(dat$interval)),mean_steps_interval,type="l",ylab="Avg # steps taken",xlab="Interval")
xyplot(dat$steps~dat$interval | dat$Group,data=dat,layout=c(1,2),type="l")
dat2=data.frame(interval=levels(dat$interval),steps=mean_steps_interval)
a<-levels(dat$interval)
dim(a)
a
class(dat$interval)
dat2=data.frame(interval=unique(dat$interval),steps=mean_steps_interval)
View(dat2)
xyplot(steps~interval,data=dat2)
xyplot(steps~interval,data=dat2,type="l")
xyplot(steps~interval | Group,data=dat2,type="l")
names(dat2)
names(dat)
rm(list=ls())
setwd("/Users/Andy/DataSciCoursera/ReproducibleResearch/CourseProject1/")
dat <- read.csv("activity.csv")
dat$date <- as.Date(dat$date)
weekday_list <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekend_list <- c("Saturday","Sunday")
id_week <- which(weekdays(dat$date) %in% weekday_list)
id_weekend <- which(weekdays(dat$date) %in% weekend_list)
dat$Group[id_week] <-"week"
dat$Group[id_weekend] <-"weekend"
dat$Group <- as.factor(dat$Group)
View(dat)
a<-subset(dat,Group="week")
a
steps_per_int_week<-tapply(a$steps,a$interval,mean)
steps_per_int_weekend<-tapply(b$steps,b$interval,mean)
steps_per_int_week
a
a$interval
steps_per_int_week<-as.numeric(tapply(a$steps,a$interval,mean))
steps_per_int_week
steps_per_int_week<-as.numeric(tapply(a$steps,a$interval,mean))
steps_per_int_weekend<-as.numeric(tapply(b$steps,b$interval,mean))
a<-subset(dat,Group="week")
b<-subset(dat,Group="weekend")
steps_per_int_week<-as.numeric(tapply(a$steps,a$interval,mean))
steps_per_int_weekend<-as.numeric(tapply(b$steps,b$interval,mean))
dat2a=data.frame(interval=unique(dat$interval),steps=steps_per_int_week,Group="week")
View(dat2a)
steps_per_int_week
steps_per_int_weekend
class(steps_per_int_week)
a$steps
steps_per_int_week<-as.numeric(tapply(a$steps,a$interval,mean,na.rm=TRUE))
steps_per_int_weekend<-as.numeric(tapply(b$steps,b$interval,mean,na.rm=TRUE))
dat2a=data.frame(interval=unique(dat$interval),steps=steps_per_int_week,Group="week")
View(dat2a)
dat2a=data.frame(interval=unique(dat$interval),steps=steps_per_int_week,Group="week")
dat2b=data.frame(interval=unique(dat$interval),steps=steps_per_int_weekend,Group="weekend")
dat2=rbind(dat2a,dat2b)
View(dat2)
xyplot(steps~interval | Group,data=dat2,layout=c(1,2))
xyplot(steps~interval | Group,data=dat2,layout=c(1,2),type="l")
weekday_list <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekend_list <- c("Saturday","Sunday")
id_week <- which(weekdays(dat$date) %in% weekday_list)
id_weekend <- which(weekdays(dat$date) %in% weekend_list)
dat$Group[id_week] <-"week"
dat$Group[id_weekend] <-"weekend"
dat$Group <- as.factor(dat$Group)
a<-subset(dat,Group="week")
b<-subset(dat,Group="weekend")
steps_per_int_week<-as.numeric(tapply(a$steps,a$interval,mean,na.rm=TRUE))
steps_per_int_weekend<-as.numeric(tapply(b$steps,b$interval,mean,na.rm=TRUE))
dat2a=data.frame(interval=unique(dat$interval),steps=steps_per_int_week,Group="week")
dat2b=data.frame(interval=unique(dat$interval),steps=steps_per_int_weekend,Group="weekend")
dat2=rbind(dat2a,dat2b)
xyplot(steps~interval | Group,data=dat2,layout=c(1,2),type="l")
xyplot(steps~interval ,data=dat2,layout=c(1,2),type="l")
plot(dat2b$steps)
plot(dat2a$steps)
dat2a$steps-dat2b$steps
dat
id_week
id_week
id_week-id_weekend
weekday_list <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekend_list <- c("Saturday","Sunday")
id_week <- which(weekdays(dat$date) %in% weekday_list)
id_weekend <- which(weekdays(dat$date) %in% weekend_list)
dat$Group[id_week] <-"week"
dat$Group[id_weekend] <-"weekend"
dat$Group <- as.factor(dat$Group)
View(dat)
a<-subset(dat,Group="week")
b<-subset(dat,Group="weekend")
a
View(a)
View(b)
a$steps-b$steps
dim(a)
dim(b)
weekday_list
id_week[1:100]
id_weekend[1:100]
rm(a)
rm(b)
dat$Group[id_week] <-"week"
dat$Group[id_weekend] <-"weekend"
dat$Group <- as.factor(dat$Group)
a<-subset(dat,Group="week")
b<-subset(dat,Group="weekend")
dim(a)
dim(b)
dat$Group
a<-subset(dat,as.character(Group="week"))
a<-subset(dat,as.character(Group)="week")
as.character(dat$Group)
a<-subset(dat,as.character(dat$Group)="week")
a<-subset(dat,as.character(dat$Group)=="week")
dim(a)
b<-subset(dat,as.character(dat$Group)=="weekend")
steps_per_int_week<-as.numeric(tapply(a$steps,a$interval,mean,na.rm=TRUE))
steps_per_int_weekend<-as.numeric(tapply(b$steps,b$interval,mean,na.rm=TRUE))
dat2a=data.frame(interval=unique(dat$interval),steps=steps_per_int_week,Group="week")
dat2b=data.frame(interval=unique(dat$interval),steps=steps_per_int_weekend,Group="weekend")
dat2=rbind(dat2a,dat2b)
xyplot(steps~interval ,data=dat2,layout=c(1,2),type="l")
xyplot(steps~interval | Group,data=dat2,layout=c(1,2),type="l")
800*5/60
dat$interval
unique(dat$interval)
rm(list=ls())
setwd("/Users/Andy/DataSciCoursera/ReproducibleResearch/CourseProject1/")
dat <- read.csv("activity.csv")
class(dat$date)
dat$date <- as.Date(dat$date)
class(dat$date)
steps_per_day <- tapply(dat$steps,dat$date,sum)
hist(steps_per_day)
mean_steps_day <- mean(steps_per_day,na.rm = TRUE)
med_steps_day <- median(steps_per_day,na.rm = TRUE)
mean_steps_interval <- as.numeric(tapply(dat$steps, dat$interval, mean,na.rm=TRUE))
plot(as.numeric(unique(dat$interval)),mean_steps_interval,type="l",ylab="Avg # steps taken",xlab="Interval")
unique(dat$interval)[which.max(mean_steps_interval)]
dat
names(dat)
dat_filled <- data.frame(steps=steps_fill,date=dat$date,interval=dat$interval)
idna <-which(is.na(dat$steps))
steps_fill<-dat$steps
#lapply( dat$steps[which(is.na(dat$steps))],mean())
for (i in seq_along(idna)){
steps_fill[idna[i]] <- mean_steps_interval[which(dat$interval[idna[i]]==unique(dat$interval
idna <-which(is.na(dat$steps))
steps_fill<-dat$steps
#lapply( dat$steps[which(is.na(dat$steps))],mean())
for (i in seq_along(idna)){
steps_fill[idna[i]] <- mean_steps_interval[which(dat$interval[idna[i]]==unique(dat$interval
idna <-which(is.na(dat$steps))
steps_fill<-dat$steps
#lapply( dat$steps[which(is.na(dat$steps))],mean())
for (i in seq_along(idna)){
steps_fill[idna[i]] <- mean_steps_interval[which(dat$interval[idna[i]]==unique(dat$interval))]
}
dat_filled <- data.frame(steps=steps_fill,date=dat$date,interval=dat$interval)
View(dat)
View(dat_filled)
steps_per_day_fill <- tapply(dat_filled$steps,dat_filled$date,sum)
hist(steps_per_day_fill)
plot(as.numeric(unique(dat$interval)),mean_steps_interval,type="l",ylab="Avg # steps taken",xlab="Interval",main="Mean # Steps per Interval")
